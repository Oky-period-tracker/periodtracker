{"version":3,"names":["React","Animated","Platform","StyleSheet","View","AppContainer","warnOnce","ScreenStack","ScreenContext","StackActions","useTheme","useSafeAreaFrame","useSafeAreaInsets","HeaderConfig","SafeAreaProviderCompat","getDefaultHeaderHeight","getStatusBarHeight","HeaderHeightContext","AnimatedHeaderHeightContext","isAndroid","OS","Container","__DEV__","DebugContainer","props","stackPresentation","rest","createElement","MaybeNestedStack","_ref","_options$statusBarTra","_options$headerLargeT","options","route","children","colors","headerShown","contentStyle","Screen","useContext","isHeaderInModal","headerShownPreviousRef","useRef","useEffect","current","name","content","style","styles","container","backgroundColor","background","collapsable","dimensions","topInset","top","isStatusBarTranslucent","statusBarTranslucent","statusBarHeight","hasLargeHeader","headerLargeTitle","headerHeight","enabled","isNativeStack","absoluteFill","Provider","value","_extends","RouteView","_ref2","_options$statusBarTra2","_options$headerLargeT2","descriptors","index","navigation","stateKey","render","renderScene","key","gestureEnabled","hideKeyboardOnSwipe","homeIndicatorHidden","sheetAllowedDetents","sheetLargestUndimmedDetent","sheetGrabberVisible","sheetCornerRadius","sheetExpandsWhenScrolledToEdge","nativeBackButtonDismissalEnabled","navigationBarColor","navigationBarHidden","replaceAnimation","screenOrientation","statusBarAnimation","statusBarColor","statusBarHidden","statusBarStyle","swipeDirection","transitionDuration","freezeOnBlur","customAnimationOnSwipe","fullScreenSwipeEnabled","gestureResponseDistance","stackAnimation","undefined","defaultHeaderHeight","parentHeaderHeight","isHeaderInPush","staticHeaderHeight","cachedAnimatedHeaderHeight","animatedHeaderHeight","Value","useNativeDriver","dark","onHeaderBackButtonClicked","dispatch","pop","source","target","onWillAppear","emit","type","data","closing","onWillDisappear","onAppear","onDisappear","onHeaderHeightChange","e","nativeEvent","setValue","onDismissed","dismissCount","onGestureCancel","NativeStackViewInner","_ref3","state","routes","map","NativeStackView","create","flex"],"sources":["NativeStackView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, Platform, StyleSheet, View, ViewProps } from 'react-native';\n// @ts-ignore Getting private component\n// eslint-disable-next-line import/no-named-as-default, import/default, import/no-named-as-default-member, import/namespace\nimport AppContainer from 'react-native/Libraries/ReactNative/AppContainer';\nimport warnOnce from 'warn-once';\nimport {\n  ScreenStack,\n  StackPresentationTypes,\n  ScreenContext,\n} from 'react-native-screens';\nimport {\n  ParamListBase,\n  StackActions,\n  StackNavigationState,\n  useTheme,\n  Route,\n  NavigationState,\n  PartialState,\n} from '@react-navigation/native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport {\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n  NativeStackNavigationOptions,\n} from '../types';\nimport HeaderConfig from './HeaderConfig';\nimport SafeAreaProviderCompat from '../utils/SafeAreaProviderCompat';\nimport getDefaultHeaderHeight from '../utils/getDefaultHeaderHeight';\nimport getStatusBarHeight from '../utils/getStatusBarHeight';\nimport HeaderHeightContext from '../utils/HeaderHeightContext';\nimport AnimatedHeaderHeightContext from '../utils/AnimatedHeaderHeightContext';\n\nconst isAndroid = Platform.OS === 'android';\n\nlet Container = View;\n\nif (__DEV__) {\n  const DebugContainer = (\n    props: ViewProps & { stackPresentation: StackPresentationTypes }\n  ) => {\n    const { stackPresentation, ...rest } = props;\n    if (Platform.OS === 'ios' && stackPresentation !== 'push') {\n      return (\n        <AppContainer>\n          <View {...rest} />\n        </AppContainer>\n      );\n    }\n    return <View {...rest} />;\n  };\n  // @ts-ignore Wrong props\n  Container = DebugContainer;\n}\n\nconst MaybeNestedStack = ({\n  options,\n  route,\n  stackPresentation,\n  children,\n}: {\n  options: NativeStackNavigationOptions;\n  route: Route<string>;\n  stackPresentation: StackPresentationTypes;\n  children: React.ReactNode;\n}) => {\n  const { colors } = useTheme();\n  const { headerShown = true, contentStyle } = options;\n\n  const Screen = React.useContext(ScreenContext);\n\n  const isHeaderInModal = isAndroid\n    ? false\n    : stackPresentation !== 'push' && headerShown === true;\n\n  const headerShownPreviousRef = React.useRef(headerShown);\n\n  React.useEffect(() => {\n    warnOnce(\n      !isAndroid &&\n        stackPresentation !== 'push' &&\n        headerShownPreviousRef.current !== headerShown,\n      `Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '${route.name}'.`\n    );\n\n    headerShownPreviousRef.current = headerShown;\n  }, [headerShown, stackPresentation, route.name]);\n\n  const content = (\n    <Container\n      style={[\n        styles.container,\n        stackPresentation !== 'transparentModal' &&\n          stackPresentation !== 'containedTransparentModal' && {\n            backgroundColor: colors.background,\n          },\n        contentStyle,\n      ]}\n      // @ts-ignore Wrong props passed to View\n      stackPresentation={stackPresentation}\n      // This view must *not* be flattened.\n      // See https://github.com/software-mansion/react-native-screens/pull/1825\n      // for detailed explanation.\n      collapsable={false}>\n      {children}\n    </Container>\n  );\n\n  const dimensions = useSafeAreaFrame();\n  const topInset = useSafeAreaInsets().top;\n  const isStatusBarTranslucent = options.statusBarTranslucent ?? false;\n  const statusBarHeight = getStatusBarHeight(\n    topInset,\n    dimensions,\n    isStatusBarTranslucent\n  );\n\n  const hasLargeHeader = options.headerLargeTitle ?? false;\n\n  const headerHeight = getDefaultHeaderHeight(\n    dimensions,\n    statusBarHeight,\n    stackPresentation,\n    hasLargeHeader\n  );\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.container}>\n        <Screen\n          enabled\n          isNativeStack\n          hasLargeHeader={hasLargeHeader}\n          style={StyleSheet.absoluteFill}>\n          <HeaderHeightContext.Provider value={headerHeight}>\n            <HeaderConfig {...options} route={route} />\n            {content}\n          </HeaderHeightContext.Provider>\n        </Screen>\n      </ScreenStack>\n    );\n  }\n  return content;\n};\n\ntype NavigationRoute<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList\n> = Route<Extract<RouteName, string>, ParamList[RouteName]> & {\n  state?: NavigationState | PartialState<NavigationState>;\n};\n\nconst RouteView = ({\n  descriptors,\n  route,\n  index,\n  navigation,\n  stateKey,\n}: {\n  descriptors: NativeStackDescriptorMap;\n  route: NavigationRoute<ParamListBase, string>;\n  index: number;\n  navigation: NativeStackNavigationHelpers;\n  stateKey: string;\n}) => {\n  const { options, render: renderScene } = descriptors[route.key];\n  const {\n    gestureEnabled,\n    headerShown,\n    hideKeyboardOnSwipe,\n    homeIndicatorHidden,\n    sheetAllowedDetents = 'large',\n    sheetLargestUndimmedDetent = 'all',\n    sheetGrabberVisible = false,\n    sheetCornerRadius = -1.0,\n    sheetExpandsWhenScrolledToEdge = true,\n    nativeBackButtonDismissalEnabled = false,\n    navigationBarColor,\n    navigationBarHidden,\n    replaceAnimation = 'pop',\n    screenOrientation,\n    statusBarAnimation,\n    statusBarColor,\n    statusBarHidden,\n    statusBarStyle,\n    statusBarTranslucent,\n    swipeDirection = 'horizontal',\n    transitionDuration,\n    freezeOnBlur,\n  } = options;\n\n  let {\n    customAnimationOnSwipe,\n    fullScreenSwipeEnabled,\n    gestureResponseDistance,\n    stackAnimation,\n    stackPresentation = 'push',\n  } = options;\n\n  if (swipeDirection === 'vertical') {\n    // for `vertical` direction to work, we need to set `fullScreenSwipeEnabled` to `true`\n    // so the screen can be dismissed from any point on screen.\n    // `customAnimationOnSwipe` needs to be set to `true` so the `stackAnimation` set by user can be used,\n    // otherwise `simple_push` will be used.\n    // Also, the default animation for this direction seems to be `slide_from_bottom`.\n    if (fullScreenSwipeEnabled === undefined) {\n      fullScreenSwipeEnabled = true;\n    }\n    if (customAnimationOnSwipe === undefined) {\n      customAnimationOnSwipe = true;\n    }\n    if (stackAnimation === undefined) {\n      stackAnimation = 'slide_from_bottom';\n    }\n  }\n\n  if (index === 0) {\n    // first screen should always be treated as `push`, it resolves problems with no header animation\n    // for navigator with first screen as `modal` and the next as `push`\n    stackPresentation = 'push';\n  }\n\n  const dimensions = useSafeAreaFrame();\n  const topInset = useSafeAreaInsets().top;\n  const isStatusBarTranslucent = options.statusBarTranslucent ?? false;\n  const statusBarHeight = getStatusBarHeight(\n    topInset,\n    dimensions,\n    isStatusBarTranslucent\n  );\n\n  const hasLargeHeader = options.headerLargeTitle ?? false;\n\n  const defaultHeaderHeight = getDefaultHeaderHeight(\n    dimensions,\n    statusBarHeight,\n    stackPresentation,\n    hasLargeHeader\n  );\n\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const isHeaderInPush = isAndroid\n    ? headerShown\n    : stackPresentation === 'push' && headerShown !== false;\n\n  const staticHeaderHeight =\n    isHeaderInPush !== false ? defaultHeaderHeight : parentHeaderHeight ?? 0;\n\n  // We need to ensure the first retrieved header height will be cached and set in animatedHeaderHeight.\n  // We're caching the header height here, as on iOS native side events are not always coming to the JS on first notify.\n  // TODO: Check why first event is not being received once it is cached on the native side.\n  const cachedAnimatedHeaderHeight = React.useRef(defaultHeaderHeight);\n  const animatedHeaderHeight = React.useRef(\n    new Animated.Value(staticHeaderHeight, {\n      useNativeDriver: true,\n    })\n  ).current;\n\n  const Screen = React.useContext(ScreenContext);\n\n  const { dark } = useTheme();\n\n  return (\n    <Screen\n      key={route.key}\n      enabled\n      isNativeStack\n      hasLargeHeader={hasLargeHeader}\n      style={StyleSheet.absoluteFill}\n      sheetAllowedDetents={sheetAllowedDetents}\n      sheetLargestUndimmedDetent={sheetLargestUndimmedDetent}\n      sheetGrabberVisible={sheetGrabberVisible}\n      sheetCornerRadius={sheetCornerRadius}\n      sheetExpandsWhenScrolledToEdge={sheetExpandsWhenScrolledToEdge}\n      customAnimationOnSwipe={customAnimationOnSwipe}\n      freezeOnBlur={freezeOnBlur}\n      fullScreenSwipeEnabled={fullScreenSwipeEnabled}\n      hideKeyboardOnSwipe={hideKeyboardOnSwipe}\n      homeIndicatorHidden={homeIndicatorHidden}\n      gestureEnabled={isAndroid ? false : gestureEnabled}\n      gestureResponseDistance={gestureResponseDistance}\n      nativeBackButtonDismissalEnabled={nativeBackButtonDismissalEnabled}\n      navigationBarColor={navigationBarColor}\n      navigationBarHidden={navigationBarHidden}\n      replaceAnimation={replaceAnimation}\n      screenOrientation={screenOrientation}\n      stackAnimation={stackAnimation}\n      stackPresentation={stackPresentation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarColor={statusBarColor}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle ?? (dark ? 'light' : 'dark')}\n      statusBarTranslucent={statusBarTranslucent}\n      swipeDirection={swipeDirection}\n      transitionDuration={transitionDuration}\n      onHeaderBackButtonClicked={() => {\n        navigation.dispatch({\n          ...StackActions.pop(),\n          source: route.key,\n          target: stateKey,\n        });\n      }}\n      onWillAppear={() => {\n        navigation.emit({\n          type: 'transitionStart',\n          data: { closing: false },\n          target: route.key,\n        });\n      }}\n      onWillDisappear={() => {\n        navigation.emit({\n          type: 'transitionStart',\n          data: { closing: true },\n          target: route.key,\n        });\n      }}\n      onAppear={() => {\n        navigation.emit({\n          type: 'appear',\n          target: route.key,\n        });\n        navigation.emit({\n          type: 'transitionEnd',\n          data: { closing: false },\n          target: route.key,\n        });\n      }}\n      onDisappear={() => {\n        navigation.emit({\n          type: 'transitionEnd',\n          data: { closing: true },\n          target: route.key,\n        });\n      }}\n      onHeaderHeightChange={e => {\n        const headerHeight = e.nativeEvent.headerHeight;\n\n        if (cachedAnimatedHeaderHeight.current !== headerHeight) {\n          // Currently, we're setting value by Animated#setValue, because we want to cache animated value.\n          // Also, in React Native 0.72 there was a bug on Fabric causing a large delay between the screen transition,\n          // which should not occur.\n          // TODO: Check if it's possible to replace animated#setValue to Animated#event.\n          animatedHeaderHeight.setValue(headerHeight);\n          cachedAnimatedHeaderHeight.current = headerHeight;\n        }\n      }}\n      onDismissed={e => {\n        navigation.emit({\n          type: 'dismiss',\n          target: route.key,\n        });\n\n        const dismissCount =\n          e.nativeEvent.dismissCount > 0 ? e.nativeEvent.dismissCount : 1;\n\n        navigation.dispatch({\n          ...StackActions.pop(dismissCount),\n          source: route.key,\n          target: stateKey,\n        });\n      }}\n      onGestureCancel={() => {\n        navigation.emit({\n          type: 'gestureCancel',\n          target: route.key,\n        });\n      }}>\n      <AnimatedHeaderHeightContext.Provider value={animatedHeaderHeight}>\n        <HeaderHeightContext.Provider value={staticHeaderHeight}>\n          <MaybeNestedStack\n            options={options}\n            route={route}\n            stackPresentation={stackPresentation}>\n            {renderScene()}\n          </MaybeNestedStack>\n          {/* HeaderConfig must not be first child of a Screen.\n           See https://github.com/software-mansion/react-native-screens/pull/1825\n           for detailed explanation */}\n          <HeaderConfig\n            {...options}\n            route={route}\n            headerShown={isHeaderInPush}\n          />\n        </HeaderHeightContext.Provider>\n      </AnimatedHeaderHeightContext.Provider>\n    </Screen>\n  );\n};\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nfunction NativeStackViewInner({\n  state,\n  navigation,\n  descriptors,\n}: Props): JSX.Element {\n  const { key, routes } = state;\n\n  return (\n    <ScreenStack style={styles.container}>\n      {routes.map((route, index) => (\n        <RouteView\n          key={route.key}\n          descriptors={descriptors}\n          route={route}\n          index={index}\n          navigation={navigation}\n          stateKey={key}\n        />\n      ))}\n    </ScreenStack>\n  );\n}\n\nexport default function NativeStackView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <NativeStackViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":"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"}