{"version":3,"sources":["../../../../../src/start/doctor/apple/XcodePrerequisite.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { execSync } from 'child_process';\nimport semver from 'semver';\n\nimport * as Log from '../../../log';\nimport { AbortCommandError } from '../../../utils/errors';\nimport { profile } from '../../../utils/profile';\nimport { confirmAsync } from '../../../utils/prompts';\nimport { Prerequisite } from '../Prerequisite';\n\nconst debug = require('debug')('expo:doctor:apple:xcode') as typeof console.log;\n\n// Based on the Apple announcement (last updated: Aug 2023).\n// https://developer.apple.com/news/upcoming-requirements/?id=04252023a\nconst MIN_XCODE_VERSION = '14.1';\nconst APP_STORE_ID = '497799835';\n\nconst SUGGESTED_XCODE_VERSION = `${MIN_XCODE_VERSION}.0`;\n\nconst promptToOpenAppStoreAsync = async (message: string) => {\n  // This prompt serves no purpose accept informing the user what to do next, we could just open the App Store but it could be confusing if they don't know what's going on.\n  const confirm = await confirmAsync({ initial: true, message });\n  if (confirm) {\n    Log.log(`Going to the App Store, re-run Expo CLI when Xcode has finished installing.`);\n    openAppStore(APP_STORE_ID);\n  }\n};\n\n/** Exposed for testing, use `getXcodeVersion` */\nexport const getXcodeVersionAsync = (): string | null | false => {\n  try {\n    const last = execSync('xcodebuild -version', { stdio: 'pipe' })\n      .toString()\n      .match(/^Xcode (\\d+\\.\\d+)/)?.[1];\n    // Convert to a semver string\n    if (last) {\n      const version = `${last}.0`;\n\n      if (!semver.valid(version)) {\n        // Not sure why this would happen, if it does we should add a more confident error message.\n        Log.error(`Xcode version is in an unknown format: ${version}`);\n        return false;\n      }\n\n      return version;\n    }\n    // not sure what's going on\n    Log.error(\n      'Unable to check Xcode version. Command ran successfully but no version number was found.'\n    );\n  } catch {\n    // not installed\n  }\n  return null;\n};\n\n/**\n * Open a link to the App Store. Just link in mobile apps, **never** redirect without prompting first.\n *\n * @param appId\n */\nfunction openAppStore(appId: string) {\n  const link = getAppStoreLink(appId);\n  execSync(`open ${link}`, { stdio: 'ignore' });\n}\n\nfunction getAppStoreLink(appId: string): string {\n  if (process.platform === 'darwin') {\n    // TODO: Is there ever a case where the macappstore isn't available on mac?\n    return `macappstore://itunes.apple.com/app/id${appId}`;\n  }\n  return `https://apps.apple.com/us/app/id${appId}`;\n}\n\nfunction spawnForString(cmd: string): string | null {\n  try {\n    return execSync(cmd, { stdio: 'pipe' }).toString().trim();\n  } catch {}\n  return null;\n}\n\n/** @returns a string like `/Applications/Xcode.app/Contents/Developer` when Xcode has a correctly selected path. */\nfunction getXcodeSelectPathAsync() {\n  return spawnForString('/usr/bin/xcode-select --print-path');\n}\nfunction getXcodeInstalled() {\n  return spawnForString('ls /Applications/Xcode.app/Contents/Developer');\n}\n\nexport class XcodePrerequisite extends Prerequisite {\n  static instance = new XcodePrerequisite();\n\n  /**\n   * Ensure Xcode is installed and recent enough to be used with Expo.\n   */\n  async assertImplementation(): Promise<void> {\n    const version = profile(getXcodeVersionAsync)();\n    debug(`Xcode version: ${version}`);\n    if (!version) {\n      // A couple different issues could have occurred, let's check them after we're past the point of no return\n      // since we no longer need to be fast about validation.\n\n      // Ensure Xcode.app can be found before we prompt to sudo select it.\n      if (getXcodeInstalled()) {\n        const selectPath = profile(getXcodeSelectPathAsync)();\n        debug(`Xcode select path: ${selectPath}`);\n        if (!selectPath) {\n          Log.error(\n            [\n              '',\n              chalk.bold('Xcode has not been fully setup for Apple development yet.'),\n              'Download at: https://developer.apple.com/xcode/',\n              'or in the App Store.',\n              '',\n              'After downloading Xcode, run the following two commands in your terminal:',\n              chalk.cyan('  sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer'),\n              chalk.cyan('  sudo xcodebuild -runFirstLaunch'),\n              '',\n              'Then you can re-run Expo CLI. Alternatively, you can build apps in the cloud with EAS CLI, or preview using the Expo Go app on a physical device.',\n              '',\n            ].join('\\n')\n          );\n          throw new AbortCommandError();\n        } else {\n          debug(`Unexpected Xcode setup (version: ${version}, select: ${selectPath})`);\n        }\n      }\n\n      // Almost certainly Xcode isn't installed.\n      await promptToOpenAppStoreAsync(\n        `Xcode must be fully installed before you can continue. Continue to the App Store?`\n      );\n      throw new AbortCommandError();\n    }\n\n    if (semver.lt(version, SUGGESTED_XCODE_VERSION)) {\n      // Xcode version is too old.\n      await promptToOpenAppStoreAsync(\n        `Xcode (${version}) needs to be updated to at least version ${MIN_XCODE_VERSION}. Continue to the App Store?`\n      );\n      throw new AbortCommandError();\n    }\n  }\n}\n"],"names":["Log","debug","require","MIN_XCODE_VERSION","APP_STORE_ID","SUGGESTED_XCODE_VERSION","promptToOpenAppStoreAsync","message","confirm","confirmAsync","initial","log","openAppStore","getXcodeVersionAsync","execSync","last","stdio","toString","match","version","semver","valid","error","appId","link","getAppStoreLink","process","platform","spawnForString","cmd","trim","getXcodeSelectPathAsync","getXcodeInstalled","XcodePrerequisite","Prerequisite","instance","assertImplementation","profile","selectPath","chalk","bold","cyan","join","AbortCommandError","lt"],"mappings":"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"}