{"version":3,"sources":["../../../../../src/start/doctor/typescript/updateTSConfig.ts"],"sourcesContent":["import JsonFile from '@expo/json-file';\nimport chalk from 'chalk';\nimport fs from 'fs';\n\nimport * as Log from '../../../log';\n\nexport const baseTSConfigName = 'expo/tsconfig.base';\n\nexport async function updateTSConfigAsync({\n  tsConfigPath,\n}: {\n  tsConfigPath: string;\n}): Promise<void> {\n  const shouldGenerate = !fs.existsSync(tsConfigPath) || fs.statSync(tsConfigPath).size === 0;\n  if (shouldGenerate) {\n    await JsonFile.writeAsync(tsConfigPath, { compilerOptions: {} });\n  }\n\n  const projectTSConfig = JsonFile.read(tsConfigPath, {\n    // Some tsconfig.json files have a generated comment in the file.\n    json5: true,\n  });\n\n  projectTSConfig.compilerOptions ??= {};\n\n  const modifications: [string, string][] = [];\n\n  // If the extends field isn't defined, set it to the expo default\n  if (!projectTSConfig.extends) {\n    // if (projectTSConfig.extends !== baseTSConfigName) {\n    projectTSConfig.extends = baseTSConfigName;\n    modifications.push(['extends', baseTSConfigName]);\n  }\n\n  // If no changes, then quietly bail out\n  if (!modifications.length) {\n    return;\n  }\n\n  // Write changes and log out a summary of what changed\n  await JsonFile.writeAsync(tsConfigPath, projectTSConfig);\n\n  // If no changes, then quietly bail out\n  if (modifications.length === 0) {\n    return;\n  }\n\n  Log.log();\n\n  if (shouldGenerate) {\n    Log.log(chalk`{bold TypeScript}: A {cyan tsconfig.json} has been auto-generated`);\n  } else {\n    Log.log(\n      chalk`{bold TypeScript}: The {cyan tsconfig.json} has been updated {dim (Use EXPO_NO_TYPESCRIPT_SETUP to skip)}`\n    );\n    logModifications(modifications);\n  }\n  Log.log();\n}\n\nfunction logModifications(modifications: string[][]) {\n  Log.log();\n\n  Log.log(chalk`\\u203A {bold Required} modifications made to the {cyan tsconfig.json}:`);\n\n  Log.log();\n\n  // Sort the items based on key name length\n  printTable(modifications.sort((a, b) => a[0].length - b[0].length));\n\n  Log.log();\n}\n\nfunction printTable(items: string[][]) {\n  const tableFormat = (name: string, msg: string) =>\n    `  ${chalk.bold`${name}`} is now ${chalk.cyan(msg)}`;\n  for (const [key, value] of items) {\n    Log.log(tableFormat(key, value));\n  }\n}\n"],"names":["updateTSConfigAsync","Log","projectTSConfig","baseTSConfigName","tsConfigPath","shouldGenerate","fs","existsSync","statSync","size","JsonFile","writeAsync","compilerOptions","read","json5","modifications","extends","push","length","log","chalk","logModifications","printTable","sort","a","b","items","tableFormat","name","msg","bold","cyan","key","value"],"mappings":"AAAA;;;;QAQsBA,mBAAmB,GAAnBA,mBAAmB;;AARpB,IAAA,SAAiB,kCAAjB,iBAAiB,EAAA;AACpB,IAAA,MAAO,kCAAP,OAAO,EAAA;AACV,IAAA,GAAI,kCAAJ,IAAI,EAAA;AAEPC,IAAAA,GAAG,mCAAM,cAAc,EAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmBbC,gBAAe;AAjBV,MAAMC,gBAAgB,GAAG,oBAAoB,AAAC;QAAxCA,gBAAgB,GAAhBA,gBAAgB;AAEtB,eAAeH,mBAAmB,CAAC,EACxCI,YAAY,CAAA,EAGb,EAAiB;IAChB,MAAMC,cAAc,GAAG,CAACC,GAAE,QAAA,CAACC,UAAU,CAACH,YAAY,CAAC,IAAIE,GAAE,QAAA,CAACE,QAAQ,CAACJ,YAAY,CAAC,CAACK,IAAI,KAAK,CAAC,AAAC;IAC5F,IAAIJ,cAAc,EAAE;QAClB,MAAMK,SAAQ,QAAA,CAACC,UAAU,CAACP,YAAY,EAAE;YAAEQ,eAAe,EAAE,EAAE;SAAE,CAAC,CAAC;KAClE;IAED,MAAMV,eAAe,GAAGQ,SAAQ,QAAA,CAACG,IAAI,CAACT,YAAY,EAAE;QAClD,iEAAiE;QACjEU,KAAK,EAAE,IAAI;KACZ,CAAC,AAAC;;IAEHZ,qBAAAA,gBAAe,GAAfA,eAAe,EAACU,eAAe,+BAA/BV,gBAAe,CAACU,eAAe,GAAK,EAAE,CAAC;IAEvC,MAAMG,aAAa,GAAuB,EAAE,AAAC;IAE7C,iEAAiE;IACjE,IAAI,CAACb,eAAe,CAACc,OAAO,EAAE;QAC5B,sDAAsD;QACtDd,eAAe,CAACc,OAAO,GAAGb,gBAAgB,CAAC;QAC3CY,aAAa,CAACE,IAAI,CAAC;YAAC,SAAS;YAAEd,gBAAgB;SAAC,CAAC,CAAC;KACnD;IAED,uCAAuC;IACvC,IAAI,CAACY,aAAa,CAACG,MAAM,EAAE;QACzB,OAAO;KACR;IAED,sDAAsD;IACtD,MAAMR,SAAQ,QAAA,CAACC,UAAU,CAACP,YAAY,EAAEF,eAAe,CAAC,CAAC;IAEzD,uCAAuC;IACvC,IAAIa,aAAa,CAACG,MAAM,KAAK,CAAC,EAAE;QAC9B,OAAO;KACR;IAEDjB,GAAG,CAACkB,GAAG,EAAE,CAAC;IAEV,IAAId,cAAc,EAAE;QAClBJ,GAAG,CAACkB,GAAG,CAACC,MAAK,QAAA,CAAC,iEAAiE,CAAC,CAAC,CAAC;KACnF,MAAM;QACLnB,GAAG,CAACkB,GAAG,CACLC,MAAK,QAAA,CAAC,yGAAyG,CAAC,CACjH,CAAC;QACFC,gBAAgB,CAACN,aAAa,CAAC,CAAC;KACjC;IACDd,GAAG,CAACkB,GAAG,EAAE,CAAC;CACX;AAED,SAASE,gBAAgB,CAACN,aAAyB,EAAE;IACnDd,GAAG,CAACkB,GAAG,EAAE,CAAC;IAEVlB,GAAG,CAACkB,GAAG,CAACC,MAAK,QAAA,CAAC,sEAAsE,CAAC,CAAC,CAAC;IAEvFnB,GAAG,CAACkB,GAAG,EAAE,CAAC;IAEV,0CAA0C;IAC1CG,UAAU,CAACP,aAAa,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,GAAKD,CAAC,CAAC,CAAC,CAAC,CAACN,MAAM,GAAGO,CAAC,CAAC,CAAC,CAAC,CAACP,MAAM;IAAA,CAAC,CAAC,CAAC;IAEpEjB,GAAG,CAACkB,GAAG,EAAE,CAAC;CACX;AAED,SAASG,UAAU,CAACI,KAAiB,EAAE;IACrC,MAAMC,WAAW,GAAG,CAACC,IAAY,EAAEC,GAAW,GAC5C,CAAC,EAAE,EAAET,MAAK,QAAA,CAACU,IAAI,CAAC,EAAEF,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAER,MAAK,QAAA,CAACW,IAAI,CAACF,GAAG,CAAC,CAAC,CAAC;IAAC;IACvD,KAAK,MAAM,CAACG,GAAG,EAAEC,KAAK,CAAC,IAAIP,KAAK,CAAE;QAChCzB,GAAG,CAACkB,GAAG,CAACQ,WAAW,CAACK,GAAG,EAAEC,KAAK,CAAC,CAAC,CAAC;KAClC;CACF"}