{"version":3,"sources":["../../../../../src/start/server/metro/TerminalReporter.ts"],"sourcesContent":["// This file represents an abstraction on the metro TerminalReporter.\n// We use this abstraction to safely extend the TerminalReporter for our own custom logging.\nimport chalk from 'chalk';\nimport UpstreamTerminalReporter from 'metro/src/lib/TerminalReporter';\nimport { Terminal } from 'metro-core';\nimport util from 'util';\n\nimport {\n  BundleDetails,\n  BundleProgressUpdate,\n  TerminalReportableEvent,\n  TerminalReporterInterface,\n} from './TerminalReporter.types';\nimport { stripAnsi } from '../../../utils/ansi';\n\nconst debug = require('debug')('expo:metro:logger') as typeof console.log;\n\n/**\n * A standard way to log a warning to the terminal. This should not be called\n * from some arbitrary Metro logic, only from the reporters. Instead of\n * calling this, add a new type of ReportableEvent instead, and implement a\n * proper handler in the reporter(s).\n */\nexport function logWarning(terminal: Terminal, format: string, ...args: any[]): void {\n  const str = util.format(format, ...args);\n  terminal.log('%s: %s', chalk.yellow('warning'), str);\n}\n\n/**\n * Similar to `logWarning`, but for messages that require the user to act.\n */\nexport function logError(terminal: Terminal, format: string, ...args: any[]): void {\n  terminal.log(\n    '%s: %s',\n    chalk.red('error'),\n    // Syntax errors may have colors applied for displaying code frames\n    // in various places outside of where Metro is currently running.\n    // If the current terminal does not support color, we'll strip the colors\n    // here.\n    util.format(chalk.supportsColor ? format : stripAnsi(format), ...args)\n  );\n}\n\nconst XTerminalReporter = UpstreamTerminalReporter as unknown as TerminalReporterInterface;\n\n/** Extended TerminalReporter class but with proper types and extra functionality to avoid using the `_log` method directly in subclasses. */\nexport class TerminalReporter extends XTerminalReporter implements TerminalReporterInterface {\n  /**\n   * A cache of { [buildID]: BundleDetails } which can be used to\n   * add more contextual logs. BundleDetails is currently only sent with `bundle_build_started`\n   * so we need to cache the details in order to print the platform info with other event types.\n   */\n  _bundleDetails: Map<string, BundleDetails> = new Map();\n\n  /** Keep track of how long a bundle takes to complete */\n  _bundleTimers: Map<string, number> = new Map();\n\n  /** Keep track of bundle processes that should not be logged. */\n  _hiddenBundleEvents: Set<string> = new Set();\n\n  _log(event: TerminalReportableEvent): void {\n    switch (event.type) {\n      case 'transform_cache_reset':\n        return this.transformCacheReset();\n      case 'dep_graph_loading':\n        return this.dependencyGraphLoading(event.hasReducedPerformance);\n      case 'client_log':\n        if (this.shouldFilterClientLog(event)) {\n          return;\n        }\n        break;\n    }\n    return super._log(event);\n  }\n\n  /** Gives subclasses an easy interface for filtering out logs. Return `true` to skip. */\n  shouldFilterClientLog(event: {\n    type: 'client_log';\n    level: 'trace' | 'info' | 'warn' | 'log' | 'group' | 'groupCollapsed' | 'groupEnd' | 'debug';\n    data: unknown[];\n  }): boolean {\n    return false;\n  }\n\n  /** Gives subclasses an easy interface for filtering out bundle events, specifically for source maps. Return `true` to skip. */\n  shouldFilterBundleEvent(event: TerminalReportableEvent): boolean {\n    return false;\n  }\n\n  /** Cache has been reset. */\n  transformCacheReset(): void {}\n\n  /** One of the first logs that will be printed. */\n  dependencyGraphLoading(hasReducedPerformance: boolean): void {}\n\n  /**\n   * Custom log event representing the end of the bundling.\n   *\n   * @param event event object.\n   * @param duration duration of the build in milliseconds.\n   */\n  bundleBuildEnded(event: TerminalReportableEvent, duration: number): void {}\n\n  /**\n   * This function is exclusively concerned with updating the internal state.\n   * No logging or status updates should be done at this point.\n   */\n  _updateState(\n    event: TerminalReportableEvent & { bundleDetails?: BundleDetails; buildID?: string }\n  ) {\n    // Append the buildID to the bundleDetails.\n    if (event.bundleDetails) {\n      event.bundleDetails.buildID = event.buildID;\n    }\n\n    const buildID = event.bundleDetails?.buildID ?? event.buildID;\n\n    if (buildID && !this._hiddenBundleEvents.has(buildID)) {\n      if (this.shouldFilterBundleEvent(event)) {\n        debug('skipping bundle events for', buildID, event);\n        this._hiddenBundleEvents.add(buildID);\n      } else {\n        super._updateState(event);\n      }\n    } else {\n      super._updateState(event);\n    }\n\n    switch (event.type) {\n      case 'bundle_build_done':\n      case 'bundle_build_failed': {\n        const startTime = this._bundleTimers.get(event.buildID);\n        // Observed a bug in Metro where the `bundle_build_done` is invoked twice during a static bundle\n        // i.e. `expo export`.\n        if (startTime == null) {\n          break;\n        }\n\n        this.bundleBuildEnded(event, startTime ? Date.now() - startTime : 0);\n        this._bundleTimers.delete(event.buildID);\n        break;\n      }\n      case 'bundle_build_started':\n        this._bundleDetails.set(event.buildID, event.bundleDetails);\n        this._bundleTimers.set(event.buildID, Date.now());\n        break;\n    }\n  }\n\n  /**\n   * We use Math.pow(ratio, 2) to as a conservative measure of progress because\n   * we know the `totalCount` is going to progressively increase as well. We\n   * also prevent the ratio from going backwards.\n   */\n  _updateBundleProgress(options: BundleProgressUpdate) {\n    super._updateBundleProgress(options);\n\n    const currentProgress = this._activeBundles.get(options.buildID);\n    if (!currentProgress) {\n      return;\n    }\n\n    // Fix an issue where the transformer is faster than the resolver,\n    // locking the progress bar at 100% after transforming the first and only resolved file (1/1).\n    if (currentProgress.ratio === 1 && options.totalFileCount === 1) {\n      Object.assign(currentProgress, { ...currentProgress, ratio: 0 });\n    }\n  }\n}\n"],"names":["logWarning","logError","debug","require","terminal","format","args","str","util","log","chalk","yellow","red","supportsColor","stripAnsi","XTerminalReporter","UpstreamTerminalReporter","TerminalReporter","_bundleDetails","Map","_bundleTimers","_hiddenBundleEvents","Set","_log","event","type","transformCacheReset","dependencyGraphLoading","hasReducedPerformance","shouldFilterClientLog","shouldFilterBundleEvent","bundleBuildEnded","duration","_updateState","bundleDetails","buildID","has","add","startTime","get","Date","now","delete","set","_updateBundleProgress","options","currentProgress","_activeBundles","ratio","totalFileCount","Object","assign"],"mappings":"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"}