{"version":3,"sources":["../../../../../src/start/server/webpack/WebpackBundlerDevServer.ts"],"sourcesContent":["import chalk from 'chalk';\nimport type { Application } from 'express';\nimport fs from 'fs';\nimport http from 'http';\nimport * as path from 'path';\nimport resolveFrom from 'resolve-from';\nimport type webpack from 'webpack';\nimport type WebpackDevServer from 'webpack-dev-server';\n\nimport { compileAsync } from './compile';\nimport {\n  importExpoWebpackConfigFromProject,\n  importWebpackDevServerFromProject,\n  importWebpackFromProject,\n} from './resolveFromProject';\nimport { ensureEnvironmentSupportsTLSAsync } from './tls';\nimport * as Log from '../../../log';\nimport { env } from '../../../utils/env';\nimport { CommandError } from '../../../utils/errors';\nimport { getIpAddress } from '../../../utils/ip';\nimport { setNodeEnv } from '../../../utils/nodeEnv';\nimport { choosePortAsync } from '../../../utils/port';\nimport { createProgressBar } from '../../../utils/progress';\nimport { ensureDotExpoProjectDirectoryInitialized } from '../../project/dotExpo';\nimport { BundlerDevServer, BundlerStartOptions, DevServerInstance } from '../BundlerDevServer';\n\nconst debug = require('debug')('expo:start:server:webpack:devServer') as typeof console.log;\n\nexport type WebpackConfiguration = webpack.Configuration & {\n  devServer?: {\n    before?: (app: Application, server: WebpackDevServer, compiler: webpack.Compiler) => void;\n  };\n};\n\nfunction assertIsWebpackDevServer(value: any): asserts value is WebpackDevServer {\n  if (!value?.sockWrite && !value?.sendMessage) {\n    throw new CommandError(\n      'WEBPACK',\n      value\n        ? 'Expected Webpack dev server, found: ' + (value.constructor?.name ?? value)\n        : 'Webpack dev server not started yet.'\n    );\n  }\n}\n\nexport class WebpackBundlerDevServer extends BundlerDevServer {\n  get name(): string {\n    return 'webpack';\n  }\n\n  public async startTypeScriptServices(): Promise<void> {\n    //  noop -- this feature is Metro-only.\n  }\n\n  public broadcastMessage(\n    method: string | 'reload' | 'devMenu' | 'sendDevCommand',\n    params?: Record<string, any>\n  ): void {\n    if (!this.instance) {\n      return;\n    }\n\n    assertIsWebpackDevServer(this.instance?.server);\n\n    // TODO(EvanBacon): Custom Webpack overlay.\n    // Default webpack-dev-server sockets use \"content-changed\" instead of \"reload\" (what we use on native).\n    // For now, just manually convert the value so our CLI interface can be unified.\n    const hackyConvertedMessage = method === 'reload' ? 'content-changed' : method;\n\n    if ('sendMessage' in this.instance.server) {\n      // @ts-expect-error: https://github.com/expo/expo/issues/21994#issuecomment-1517122501\n      this.instance.server.sendMessage(this.instance.server.sockets, hackyConvertedMessage, params);\n    } else {\n      this.instance.server.sockWrite(this.instance.server.sockets, hackyConvertedMessage, params);\n    }\n  }\n\n  isTargetingNative(): boolean {\n    return false;\n  }\n\n  private async getAvailablePortAsync(options: { defaultPort?: number }): Promise<number> {\n    try {\n      const defaultPort = options?.defaultPort ?? 19006;\n      const port = await choosePortAsync(this.projectRoot, {\n        defaultPort,\n        host: env.WEB_HOST,\n      });\n      if (!port) {\n        throw new CommandError('NO_PORT_FOUND', `Port ${defaultPort} not available.`);\n      }\n      return port;\n    } catch (error: any) {\n      throw new CommandError('NO_PORT_FOUND', error.message);\n    }\n  }\n\n  async bundleAsync({ mode, clear }: { mode: 'development' | 'production'; clear: boolean }) {\n    // Do this first to fail faster.\n    const webpack = importWebpackFromProject(this.projectRoot);\n\n    if (clear) {\n      await this.clearWebProjectCacheAsync(this.projectRoot, mode);\n    }\n\n    const config = await this.loadConfigAsync({\n      isImageEditingEnabled: true,\n      mode,\n    });\n\n    if (!config.plugins) {\n      config.plugins = [];\n    }\n\n    const bar = createProgressBar(chalk`{bold Web} Bundling Javascript [:bar] :percent`, {\n      width: 64,\n      total: 100,\n      clear: true,\n      complete: '=',\n      incomplete: ' ',\n    });\n\n    // NOTE(EvanBacon): Add a progress bar to the webpack logger if defined (e.g. not in CI).\n    if (bar != null) {\n      config.plugins.push(\n        new webpack.ProgressPlugin((percent: number) => {\n          bar?.update(percent);\n          if (percent === 1) {\n            bar?.terminate();\n          }\n        })\n      );\n    }\n\n    // Create a webpack compiler that is configured with custom messages.\n    const compiler = webpack(config);\n\n    try {\n      await compileAsync(compiler);\n    } catch (error: any) {\n      Log.error(chalk.red('Failed to compile'));\n      throw error;\n    } finally {\n      bar?.terminate();\n    }\n  }\n\n  protected async startImplementationAsync(\n    options: BundlerStartOptions\n  ): Promise<DevServerInstance> {\n    // Do this first to fail faster.\n    const webpack = importWebpackFromProject(this.projectRoot);\n    const WebpackDevServer = importWebpackDevServerFromProject(this.projectRoot);\n\n    await this.stopAsync();\n\n    options.port = await this.getAvailablePortAsync({\n      defaultPort: options.port,\n    });\n    const { resetDevServer, https, port, mode } = options;\n\n    this.urlCreator = this.getUrlCreator({\n      port,\n      location: {\n        scheme: https ? 'https' : 'http',\n      },\n    });\n\n    debug('Starting webpack on port: ' + port);\n\n    if (resetDevServer) {\n      await this.clearWebProjectCacheAsync(this.projectRoot, mode);\n    }\n\n    if (https) {\n      debug('Configuring TLS to enable HTTPS support');\n      await ensureEnvironmentSupportsTLSAsync(this.projectRoot).catch((error) => {\n        Log.error(`Error creating TLS certificates: ${error}`);\n      });\n    }\n\n    const config = await this.loadConfigAsync(options);\n\n    Log.log(chalk`Starting Webpack on port ${port} in {underline ${mode}} mode.`);\n\n    // Create a webpack compiler that is configured with custom messages.\n    const compiler = webpack(config);\n\n    const server = new WebpackDevServer(\n      // @ts-expect-error: type mismatch -- Webpack types aren't great.\n      compiler,\n      config.devServer\n    );\n    // Launch WebpackDevServer.\n    server.listen(port, env.WEB_HOST, function (this: http.Server, error) {\n      if (error) {\n        Log.error(error.message);\n      }\n    });\n\n    // Extend the close method to ensure that we clean up the local info.\n    const originalClose = server.close.bind(server);\n\n    server.close = (callback?: (err?: Error) => void) => {\n      return originalClose((err?: Error) => {\n        this.instance = null;\n        callback?.(err);\n      });\n    };\n\n    const _host = getIpAddress();\n    const protocol = https ? 'https' : 'http';\n\n    return {\n      // Server instance\n      server,\n      // URL Info\n      location: {\n        url: `${protocol}://${_host}:${port}`,\n        port,\n        protocol,\n        host: _host,\n      },\n      middleware: null,\n      // Match the native protocol.\n      messageSocket: {\n        broadcast: this.broadcastMessage,\n      },\n    };\n  }\n\n  /** Load the Webpack config. Exposed for testing. */\n  getProjectConfigFilePath(): string | null {\n    // Check if the project has a webpack.config.js in the root.\n    return (\n      this.getConfigModuleIds().reduce<string | null | undefined>(\n        (prev, moduleId) => prev || resolveFrom.silent(this.projectRoot, moduleId),\n        null\n      ) ?? null\n    );\n  }\n\n  async loadConfigAsync(\n    options: Pick<BundlerStartOptions, 'mode' | 'isImageEditingEnabled' | 'https'>,\n    argv?: string[]\n  ): Promise<WebpackConfiguration> {\n    // let bar: ProgressBar | null = null;\n\n    const env = {\n      projectRoot: this.projectRoot,\n      pwa: !!options.isImageEditingEnabled,\n      // TODO: Use a new loader in Webpack config...\n      logger: {\n        info() {},\n      },\n      mode: options.mode,\n      https: options.https,\n    };\n    setNodeEnv(env.mode ?? 'development');\n    require('@expo/env').load(env.projectRoot);\n    // Check if the project has a webpack.config.js in the root.\n    const projectWebpackConfig = this.getProjectConfigFilePath();\n    let config: WebpackConfiguration;\n    if (projectWebpackConfig) {\n      const webpackConfig = require(projectWebpackConfig);\n      if (typeof webpackConfig === 'function') {\n        config = await webpackConfig(env, argv);\n      } else {\n        config = webpackConfig;\n      }\n    } else {\n      // Fallback to the default expo webpack config.\n      const loadDefaultConfigAsync = importExpoWebpackConfigFromProject(this.projectRoot);\n      // @ts-expect-error: types appear to be broken\n      config = await loadDefaultConfigAsync(env, argv);\n    }\n    return config;\n  }\n\n  protected getConfigModuleIds(): string[] {\n    return ['./webpack.config.js'];\n  }\n\n  protected async clearWebProjectCacheAsync(\n    projectRoot: string,\n    mode: string = 'development'\n  ): Promise<void> {\n    Log.log(chalk.dim(`Clearing Webpack ${mode} cache directory...`));\n\n    const dir = await ensureDotExpoProjectDirectoryInitialized(projectRoot);\n    const cacheFolder = path.join(dir, 'web/cache', mode);\n    try {\n      await fs.promises.rm(cacheFolder, { recursive: true, force: true });\n    } catch (error: any) {\n      Log.error(`Could not clear ${mode} web cache directory: ${error.message}`);\n    }\n  }\n}\n\nexport function getProjectWebpackConfigFilePath(projectRoot: string) {\n  return resolveFrom.silent(projectRoot, './webpack.config.js');\n}\n"],"names":["getProjectWebpackConfigFilePath","path","Log","debug","require","assertIsWebpackDevServer","value","sockWrite","sendMessage","CommandError","constructor","name","WebpackBundlerDevServer","BundlerDevServer","startTypeScriptServices","broadcastMessage","method","params","instance","server","hackyConvertedMessage","sockets","isTargetingNative","getAvailablePortAsync","options","defaultPort","port","choosePortAsync","projectRoot","host","env","WEB_HOST","error","message","bundleAsync","mode","clear","webpack","importWebpackFromProject","clearWebProjectCacheAsync","config","loadConfigAsync","isImageEditingEnabled","plugins","bar","createProgressBar","chalk","width","total","complete","incomplete","push","ProgressPlugin","percent","update","terminate","compiler","compileAsync","red","startImplementationAsync","WebpackDevServer","importWebpackDevServerFromProject","stopAsync","resetDevServer","https","urlCreator","getUrlCreator","location","scheme","ensureEnvironmentSupportsTLSAsync","catch","log","devServer","listen","originalClose","close","bind","callback","err","_host","getIpAddress","protocol","url","middleware","messageSocket","broadcast","getProjectConfigFilePath","getConfigModuleIds","reduce","prev","moduleId","resolveFrom","silent","argv","pwa","logger","info","setNodeEnv","load","projectWebpackConfig","webpackConfig","loadDefaultConfigAsync","importExpoWebpackConfigFromProject","dim","dir","ensureDotExpoProjectDirectoryInitialized","cacheFolder","join","fs","promises","rm","recursive","force"],"mappings":"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"}